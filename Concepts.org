#+TITLE: Blockchain Concepts

* Distributed systems
** CAP Theorem
States that any distributed system cannot have *Consistency*, *Availability*
and *Partition tolerance* simultaneously.
*** Consistency:
- a property that ensures that all nodes in a distributed systems have a
single latest copy of data.
*** Availability:
- means that a system is up, accesible for use, and is accepting incoming
requests and responding with data without any failures and when required.
*** Partitin Tolerance:
- ensures that if a group of nodes fails the distributed system continues to
operate correctly.

** Byzantine Generals problem
*** Consensus:
- Process of agreement between distrusting nodes on a final state of data.
*** Distributed Consensus:
- The concept of achieving consensus between multiple/distributed nodes.
*** Requirements for consensus mechanisms:
**** Agreement:
- All honest nodes decide on the same value.
**** Termination:
- All honest nodes terminate execution of the consensus process and eventually
reach a decision.
**** Validity:
- The value agreed upon by all honest nodes must be the same as the initial
value proposed by at least one honest node.
**** Fault tolerant:
- The consensus algorithm should be able to run in the presence of faulty or
malicious nodes (Byzantine nodes).
**** Integrity:
- This is a requirement where by no node makes the decision more than once.
The nodes make decisions only once in a single consensus cycle.
** Types of consensus mechanism
*** Byzantine fault tolerant-based:
- Simple scheme of nodes that are publishing signed messages with no compute
intensive operations. Eventually, when a certain number of messages are received,
then an agreement is reached.
*** Leader-based consensus mechanisms:
- Require nodes to compete for the /leader-election lottery/ and the node that
wins it proposes a final value.

* History of Blockchain
** Eletronic Cash
*** Chaum, Fiat, and Naor (CEN)
- A e-cash scheme that introduced anonimity and double spending detection.
*** Hashcash
- Introduced by Adam Back in 1997 as a Proof of Work system to control email spam.
If legitimate users want to send e-mails then they are required to compute a hash
as a proof that they have spent a reasonable amount of computing resources before
sending the email.
- Takes considerable amount of computing resources to compute but is easy and
quick to verify.
*** B-money
- Introduced in 1998 by Wei Dai. Proposed the idea of create money solving
*computational puzzles* such as *hashcash*. Based on a peer-to-peer network where
each node contain its own list of transactions.
*** BitGold
- Introduced in 2005 and also proposed solving *computational puzzles* to mint
digital currency.
*** Bitcoin
- The first practical implementation of implementation of a cryptocurrency. For
the very first time it solved the problem of *distributed consensus* in a
*trustless* network.
- It uses public key cryptography with hashcash as PoW to provide a secure,
controlled, and decentralized method of minting digital currency. The key
innovation is the idea of an ordered list of blocks composed of transactions
and cryptographically secured by the PoW mechanism 

* Introduction to Blockchain
** Blockchain definitions
- At its core is a peer-to-peer distributed ledger that is cryptographically
secure, append-only, immutable (extremely hard to change), and updateable only
via consensus or agreement among peers.
- Can be thought of as a layer of a distributed peer-to-peer network running on
top of the Internet, as can be seen below in the diagram.
It is analogous to SMTP, HTTP, or FTP running on top of TCP/IP. 
- a platform whereby peers can exchange values using transactions without the
need for a central trusted arbitrator. This is a powerful concept and once readers
understand it they will realize the tsunamic potential of blockchain technology.
This allows blockchain to be a decentralized consensus mechanism where no single
authority is in charge of the database.
- Is a decentralized consensus mechanism. In a blockchain, all peers eventually
come to an agreement regarding the state of a transaction.
- Is a distributed shared ledger. Blockchain can be considered a shared ledger
of transactions. The transaction are ordered and grouped into blocks. Currently,
the real-world model is based on private databases that each organization
maintains whereas the distributed ledger can serve as a single source of truth
for all member organizations that are using the blockchain
- Is a data structure; it is basically a linked list that uses hash pointers
instead of normal pointers. Hash pointers are used to point to the previous block.
** Block definitions
- a selection of transactions bundled together in order to organize them logically
It is made up of transactions and its size is variable depending on the type and
design of the blockchain in use. A reference to a previous block is also included
in the block unless it's a genesis block. A genesis block is the first block in
the blockchain that was hardcoded at the time the blockchain was started. The
structure of a block is also dependent on the type and design of a blockchain,
but generally there are a few attributes that are essential to the functionality
of a block, such as the block header, pointers to previous blocks, the time stamp,
nonce, transaction counter, transactions, and other attributes

|---------------------|
| Previous block hash |
|---------------------|
| Nonce               |
|---------------------|
| Transactions        |
|---------------------|
** Generic Elements of Blockchain
*** Addresses
- Are unique identifiers that are used in a transaction on the
blockchain to denote senders and recipients. An address is usually a public key
or derived from a public key.
*** Transaction
- Is the fundamental unit of a blockchain. A transaction represents a transfer of
value from one address to another.
*** Block
-  Is composed of multiple transactions and some other elements such as the
previous block hash (hash pointer), timestamp, and nonce.
*** Peer-to-peer network
- As the name implies, this is a network topology whereby all peers can
communicate with each other and send and receive messages.
*** Scripting or programming language
- This element performs various operations on a transaction. Transaction scripts
are predefined sets of commands for nodes to transfer tokens from one address to
another and perform various other functions. Turing complete programming language
is a desirable feature of blockchains; however, the security of such languages is
a key question and an area of important and ongoing research.
*** Virtual machine
- An extension of a transaction script. A virtual machine allows Turing complete
code to be run on a blockchain (as smart contracts) whereas a transaction script
can be limited in its operation.
Examples: Ethereum Virtual Machine (EVM) and Chain Virtual Machine (CVM).
*** State machine
- A blockchain can be viewed as a state transition mechanism whereby a state is
modified from its initial form to the next and eventually to a final form as a
result of a transaction execution and validation process by nodes.
*** Nodes
- Performs various functions depending on the role it takes. A node can propose
and validate transactions and perform mining to facilitate consensus and secure
the blockchain - consensus protocol.
*** Smart contracts
- Run on top of the blockchain and encapsulate the business logic to be executed
when certain conditions are met.
** Features of Blockchain
*** Distributed consensus
*** Transaction verification
*** Platform of smart contracts
*** Transfering value between peers
*** Generating cryptocurrency
*** Smart property
*** Provider of security
*** Immutability
*** Uniqueness
*** Smart contracts
** Applications of Blockchain
*** How Blockchain accumulate blocks
** Tiers of Blockchain Technology
*** Blockchain 1.0
*** Blockchain 2.0
*** Blockchain 3.0
*** Generation X (Blockchain X)
** Types of Blockchain
*** Public Blockchains
*** Private Blockchains
*** Semi-private Blockchains
*** Sidechains
*** Permissioned ledger
*** Distributed ledger
*** Shared ledger
*** Fully private and proprietary Blockchains
*** Tokenized Blockchains
*** Tokenless Blockchains
*** Consensus in Blockchain


